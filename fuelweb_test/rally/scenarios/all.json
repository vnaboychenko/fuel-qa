{% set flavor_name = flavor_name or "m1.tiny" %}
{
    "NovaServers.boot_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                }
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaServers.boot_and_delete_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                },
                "force_delete": false
            },
            "runner": {
                "type": "constant",
                "times": 30,
                "concurrency": 3
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaServers.boot_and_associate_floating_ip": [
    {
      "runner": {
        "type": "constant",
        "concurrency": 1,
        "times": 3
      },
      "args": {
        "flavor": {
          "name": "{{flavor_name}}"
        },
        "image": {
          "name": "TestVM"
        }
      },
      "context": {
        "users": {
          "users_per_tenant": 1,
          "tenants": 1
        },
        "network": {}
      }
    }
  ],
    "NovaServers.boot_and_delete_multiple_servers": [
    {
      "runner": {
        "type": "constant",
        "concurrency": 1,
        "times": 1
      },
      "args": {
        "count": 5,
        "image": {
          "name": "TestVM"
        },
        "flavor": {
          "name": "{{flavor_name}}"
        }
      },
      "context": {
        "users": {
          "users_per_tenant": 1,
          "tenants": 1
        }
      }
    }
  ],
    "NovaKeypair.boot_and_delete_server_with_keypair": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                }
            },
            "runner": {
                "type": "constant",
                "times": 5,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 1
                },
                "network": {
                    "start_cidr": "100.1.0.0/26"
                }
            }
        }
    ],
    "NovaServers.boot_and_rebuild_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "from_image": {
                    "name": "TestVM"
                },
                "to_image": {
                    "name": "TestVM"
                }
            },
            "runner": {
                "type": "constant",
                "times": 5,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                }
            }
        }
    ],
    "NovaServers.boot_server_from_volume_and_delete": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                },
                "volume_size": 10,
                "force_delete": false
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaServers.snapshot_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                },
                "force_delete": false
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaKeypair.create_and_delete_keypair": [
        {
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaSecGroup.create_and_delete_secgroups": [
        {
            "args": {
                "security_group_count": 3,
                "rules_per_security_group": 3
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaHypervisors.list_hypervisors": [
    {
      "runner": {
        "type": "constant",
        "concurrency": 2,
        "times": 10
      },
      "args": {
        "detailed": true
      }
    }
    ],
    "NovaImages.list_images": [
    {
      "runner": {
        "type": "constant",
        "concurrency": 2,
        "times": 10
      },
      "args": {
        "detailed": true
      },
      "context": {
        "users": {
          "tenants": 3,
          "users_per_tenant": 2
        }
      }
    }
    ],
    "NovaServers.list_servers": [
        {
            "args": {
                "detailed": true
            },
            "runner": {
                "type": "constant",
                "times": 1,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                },
                "servers": {
                    "flavor": {
                        "name": "{{flavor_name}}"
                    },
                    "image": {
                        "name": "TestVM"
                    },
                    "servers_per_tenant": 2
                }
            }
        }
    ],
    "NovaServers.pause_and_unpause_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                },
                "force_delete": false
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "NovaServers.suspend_and_resume_server": [
        {
            "args": {
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                },
                "force_delete": false
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "KeystoneBasic.add_and_remove_user_role": [
    {
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "KeystoneBasic.create_and_delete_ec2credential": [
        {
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 5
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "KeystoneBasic.create_and_delete_role": [
    {
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            }
        }
    ],
    "KeystoneBasic.create_delete_user": [
        {
            "args": {},
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            }
        }
    ],
    "KeystoneBasic.create_and_list_tenants": [
        {
            "args": {},
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 1
            }
        }
    ],
    "KeystoneBasic.create_update_and_delete_tenant": [
    {
            "args": {},
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            }
        }
    ],
    "KeystoneBasic.create_user_update_password": [
        {
            "args": {},
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            }
        }
    ],
    "KeystoneBasic.get_entities": [
    {
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            }
        }
    ],
    "NeutronNetworks.create_and_delete_floating_ips": [
        {
            "args": {
                "floating_network": "net04_ext",
                "floating_ip_args": {}
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 5
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "floatingip": -1
                    }
                }
            }
        }
    ],
  "NeutronNetworks.create_and_delete_networks": [
        {
            "args": {
                "network_create_args": {}
            },
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "network": -1
                    }
                }
            }
        }
    ],
  "NeutronNetworks.create_and_delete_ports": [
        {
            "args": {
                "network_create_args": {},
                "port_create_args": {},
                "ports_per_network": 10
            },
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "network": -1,
                        "port": -1
                    }
                }
            }
        }
    ],
  "NeutronNetworks.create_and_delete_routers": [
        {
            "args": {
                "network_create_args": {},
                "subnet_create_args": {},
                "subnet_cidr_start": "1.1.0.0/30",
                "subnets_per_network": 2,
                "router_create_args": {}
            },
            "runner": {
                "type": "constant",
                "times": 30,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "network": -1,
                        "subnet": -1,
                        "router": -1
                    }
                }
            }
        }
    ],
  "NeutronSecurityGroup.create_and_delete_security_groups": [
        {
            "args": {
                "security_group_create_args": {}
            },
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "security_group": -1
                    }
                }
            }
        }
    ],
  "NeutronNetworks.create_and_delete_subnets": [
        {
            "args": {
                "network_create_args": {},
                "subnet_create_args": {},
                "subnet_cidr_start": "1.1.0.0/30",
                "subnets_per_network": 2
            },
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 10
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 3
                },
                "quotas": {
                    "neutron": {
                        "network": -1,
                        "subnet": -1
                    }
                }
            }
        }
    ],
  "GlanceImages.create_and_delete_image": [
        {
            "args": {
                "image_location": "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img",
                "container_format": "bare",
                "disk_format": "qcow2"
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 3
                }
            }
        }
    ],
  "GlanceImages.create_and_list_image": [
        {
            "args": {
                "image_location": "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img",
                "container_format": "bare",
                "disk_format": "qcow2"
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                }
            }
        }
    ],
  "GlanceImages.create_image_and_boot_instances": [
        {
            "args": {
                "image_location": "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img",
                "container_format": "bare",
                "disk_format": "qcow2",
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "number_instances": 2
            },
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 3,
                    "users_per_tenant": 5
                }
            }
        }
    ],
  "GlanceImages.list_images": [
        {
            "runner": {
                "type": "constant",
                "times": 10,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                },
                "images": {
                    "image_url": "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img",
                    "image_type": "qcow2",
                    "image_container": "bare",
                    "images_per_tenant": 4
                }
            }
        }
    ],
  "CinderVolumes.create_and_attach_volume": [
        {
            "args": {
                "size": 10,
                "image": {
                    "name": "TestVM"
                },
                "flavor": {
                    "name": "{{flavor_name}}"
                }
            },
            "runner": {
                "type": "constant",
                "times": 3,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                }
            }
        },
        {
            "args": {
                "size": {
                    "min": 1,
                    "max": 5
                },
                "flavor": {
                    "name": "{{flavor_name}}"
                },
                "image": {
                    "name": "TestVM"
                }
            },
            "runner": {
                "type": "constant",
                "times": 3,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "CinderVolumes.create_and_delete_snapshot": [
        {
            "args": {
                "force": false
            },
            "runner": {
                "type": "constant",
                "times": 3,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                },
                "volumes": {
                    "size": 1
                }
            }
        }
    ],
    "CinderVolumes.create_and_delete_volume": [
        {
            "args": {
                "size": 1
            },
            "runner": {
                "type": "constant",
                "times": 3,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                }
            }
        },
        {
            "args": {
                "size": {
                    "min": 1,
                    "max": 5
                }
            },
            "runner": {
                "type": "constant",
                "times": 3,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 2
                }
            }
        }
    ],
    "CinderVolumes.create_and_extend_volume": [
        {
            "args": {
                "size": 1,
                "new_size": 2
            },
            "runner": {
                "type": "constant",
                "times": 2,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                }
            }
        },
        {
            "args": {
                "size": {
                    "min": 1,
                    "max": 5
                },
                "new_size": {
                    "min": 6,
                    "max": 10
                }
            },
            "runner": {
                "type": "constant",
                "times": 2,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                }
            }
        }
    ],
    "CinderVolumes.list_volumes": [
        {
            "args": {
                "detailed": true
            },
            "runner": {
                "type": "constant",
                "times": 100,
                "concurrency": 1
            },
            "context": {
                "users": {
                    "tenants": 1,
                    "users_per_tenant": 1
                },
                "volumes": {
                    "size": 1,
                    "volumes_per_tenant": 4
                }
            }
        }
    ],
    "CinderVolumes.create_snapshot_and_attach_volume": [
        {
            "args": {
                "volume_type": false,
                "size": {
                    "min": 1,
                    "max": 5
                }
            },
            "runner": {
                "type": "constant",
                "times": 4,
                "concurrency": 2
            },
            "context": {
                "users": {
                    "tenants": 2,
                    "users_per_tenant": 1
                },
                "servers": {
                    "image": {
                        "name": "TestVM"
                    },
                    "flavor": {
                        "name": "{{flavor_name}}"
                    },
                    "servers_per_tenant": 2
                }
            }
        }
    ]
}

